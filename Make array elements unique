Given an array arr[ ] of N elements, your task is to find the minimum number of increment operations required to make all the elements of the array unique. 
ie- no value in the array should occur more than once. In an operation a value can be incremented by 1 only.

Example 1:

Input:
N = 3
arr[] = {1, 2, 2}
Output:
1
Explanation:
If we increase arr[2] by 1 then the resulting 
array becomes {1, 2, 3} and has all unique values.
Hence, the answer is 1 in this case.


Solution:

long long int minIncrements(vector<int> arr, int N) {
        unordered_map<int,int> m;
        long long int ans=0,maxi=0;
        sort(arr.begin(),arr.end());
        for(int i=0;i<N;i++)
        {
            maxi=max(maxi,(long long int)arr[i]);
            if(m[arr[i]]>=1)
             {
                 ans+=maxi+1-arr[i];
                 maxi++;
                 m[maxi]++;
             }
             else
                m[arr[i]]++;
        }
        return ans;
    }
