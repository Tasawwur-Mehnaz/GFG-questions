A top secret message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
You are an FBI agent. You have to determine the total number of ways that message can be decoded, as the answer can be large return the answer modulo 109 + 7.
Note: An empty digit sequence is considered to have one decoding. It may be assumed that the input contains valid digits from 0 to 9 and If there are leading 0s, extra trailing 0s and two or more consecutive 0s then it is an invalid string.

Example 1:

Input: str = "123"
Output: 3
Explanation: "123" can be decoded as "ABC"(123),
"LC"(12 3) and "AW"(1 23).


Solution:


      int mod=1e9+7;
	    int process(vector<int> &dp,int n,string s,int ind)
	    {
	        if(ind==n)
	          return 1;
	        if(dp[ind]!=-1)
	          return dp[ind];
	        int one=0,two=0;
	        if(s[ind]>='1' && s[ind]<='9')
	          one=process(dp,n,s,ind+1);
	        string temp=s.substr(ind,2);
	        if(ind<n-1 && temp>="10" && temp<="26")
	          two=process(dp,n,s,ind+2);
	          
	        return dp[ind]=(one+two)%mod;
	       
	    }
		int CountWays(string str){
		    int n=str.length();
		    vector<int> dp(n,-1);
		    return process(dp,n,str,0);
		   
		}
