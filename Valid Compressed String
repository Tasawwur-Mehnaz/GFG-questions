A special compression mechanism can arbitrarily delete 0 or more characters and replace them with the deleted character count.
Given two strings, S and T where S is a normal string and T is a compressed string, determine if the compressed string  T is valid for the plaintext string S. 


Example 1:

Input:
S = "GEEKSFORGEEKS"
T = "G7G3S"
Output:
1
Explanation:
We can clearly see that T is a valid 
compressed string for S.


Solution:

class Solution {
  public:
    int checkCompressed(string s, string t) {
        int n=t.length();
        int i=0,j=0;
         while(i<n && j<s.length())
        {
            if(s[j]==t[i])
            {
                i++;j++;
            }
            
            else if(s[j]!=t[i] && t[i]<='9' && t[i]>='0')
            {
                string deletedCount = "";
                while(i < t.size() && isdigit(t[i])){
                    deletedCount.push_back(t[i]);
                    i++;
                }
            
            
                j+=stoi(deletedCount);
                 
            }
            else
            return 0;
        }
        return (i==n && j==s.length());
     
    }
};
